rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user is parent
    function isParent() {
      return isSignedIn() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'parent';
    }
    
    // Helper function to check if user is child
    function isChild() {
      return isSignedIn() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'child';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn() && request.auth.uid == userId;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Children collection
    match /children/{childId} {
      allow read: if isSignedIn() && 
                     (resource.data.parentId == request.auth.uid || 
                      resource.data.childId == request.auth.uid);
      allow create: if isParent();
      allow update: if isParent() && resource.data.parentId == request.auth.uid;
      allow delete: if isParent() && resource.data.parentId == request.auth.uid;
    }
    
    // Chores collection
    match /chores/{choreId} {
      allow read: if isSignedIn();
      allow create: if isParent();
      allow update: if isSignedIn();
      allow delete: if isParent();
    }
    
    // Screen time collection
    match /screenTime/{entryId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }
    
    // Time requests collection
    match /timeRequests/{requestId} {
      allow read: if isSignedIn();
      allow create: if isChild();
      allow update: if isParent() || (isChild() && resource.data.childId == request.auth.uid);
    }
    
    // Invites collection
    match /invites/{inviteId} {
      allow read: if isSignedIn();
      allow create: if isParent();
      allow update: if isSignedIn();
    }
    
    // Events/audit log collection
    match /events/{eventId} {
      allow read: if isParent();
      allow create: if isSignedIn();
    }
  }
}

